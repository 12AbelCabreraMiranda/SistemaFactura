@model Sistema_Factura.Models.Cliente

@{
    ViewData["Title"] = "RegistrarCliente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" type="text/css" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
<script type="text/javascript" src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<h1 class="text-center">Registrar Cliente</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="RegistrarCliente">
           
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="NombreCliente" class="control-label"></label>
                <input asp-for="NombreCliente" class="form-control" />
                <span asp-validation-for="NombreCliente" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nit" class="control-label"></label>
                <input asp-for="Nit" id="nit" class="form-control" />
                <span asp-validation-for="Nit" class="text-danger"></span>
            </div>
            <div>
                @if (TempData["mensajeClienteExiste"] != null)
                {
                    <div class="alert alert-warning alert-dismissible fase show" role="alert">
                        @TempData["mensajeClienteExiste"]
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Cliente" class="btn btn-outline-info">Regresar</a>
</div>

<script>
    function nitIsValid(nit) {
        if (!nit) {
            return true;
        }

        var nitRegExp = new RegExp('^[0-9]+(-?[0-9kK])?$');

        if (!nitRegExp.test(nit)) {
            return false;
        }

        nit = nit.replace(/-/, '');
        var lastChar = nit.length - 1;
        var number = nit.substring(0, lastChar);
        var expectedCheker = nit.substring(lastChar, lastChar + 1).toLowerCase();

        var factor = number.length + 1;
        var total = 0;

        for (var i = 0; i < number.length; i++) {
            var character = number.substring(i, i + 1);
            var digit = parseInt(character, 10);

            total += (digit * factor);
            factor = factor - 1;
        }

        var modulus = (11 - (total % 11)) % 11;
        var computedChecker = (modulus == 10 ? "k" : modulus.toString());

        return expectedCheker === computedChecker;
    }

    $('#nit').bind('change paste keyup', function (e) {
        var $this = $(this);
        var $parent = $this.parent();
        var $next = $this.next();
        var nit = $this.val();

        if (nit && nitIsValid(nit)) {
            $parent.addClass('has-success');
            $next.addClass('glyphicon-ok');
            $parent.removeClass('has-error');
            $next.removeClass('glyphicon-remove');
        } else if (nit) {
            $parent.addClass('has-error');
            $next.addClass('glyphicon-remove');
            $parent.removeClass('has-success');
            $next.removeClass('glyphicon-ok');
        } else {
            $parent.removeClass('has-error');
            $next.removeClass('glyphicon-remove');
            $parent.removeClass('has-success');
            $next.removeClass('glyphicon-ok');
        }
    });
</script>